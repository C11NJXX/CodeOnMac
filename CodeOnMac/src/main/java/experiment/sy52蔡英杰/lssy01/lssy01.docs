实验一   构造合式公式的真值表
1、实验类型：验证性
2、实验目的：
使学生熟练掌握利用计算机语言实现逻辑运算的基本方法。
3、实验内容
对给出的任意一个合式公式（不超过四个命题变元），使学生会用C语言的程序编程表示出来，并且能够计算它在各组真值指派下所应有的真值，画出其真值表。
4、实验原理
（1）逻辑联结词的定义方法
逻辑连接词“非”：设p为命题, 复合命题 “非p”(或 “p的否定”)称为p的否定式, 记作p。符号称作否定联结词,其真值是这样定义的：若 P 的真值是T,那么┐P真值是F；若P的真值是F,则┐P 的真值是T。
逻辑连接词“合取”：设p,q为二命题, 复合命题“p并且q”(或“p与q”)称为p与q的合取式, 记作p∧q, ∧称作合取联结词。它的真值是这样定义的：当且仅当 P 和 q 的真值都为 T 时，P∧q 的真值才为 T，否则P∧q 的直值为 F。
逻辑连接词“析取”：设 p,q为命题, 复合命题“p或q”称作p与q的析取式,记作p∨q, ∨称作析取联结词。它的真值是这样定义的：当且仅当 P 和 q 的真值都为 假（F） 时，P ∨ q 的真值才为 F，否则P ∨q 的直值为 T。
逻辑连接词“蕴涵”：设 p,q为二命题, 复合命题 “如果p,则q” 称作p与q的蕴涵式, 记作pq. 称作蕴涵联结词，运算对象P叫做前提（premise） 、假设(Hypothesis) 或前件，而q 叫做 结论(Conclusion) 或 后件。它的真值是这样定义的：当且仅当 P 是T ，而 q 是 F 时，P→ q 的真值才为 F，否则P →q 的直值为 T。
逻辑连接词“等价”：设p, q为命题, 复合命题 “p当且仅当q”称作p与q的等价式, 记作pq, 称作等价联结词。它的真值是这样定义的：当且仅当 P 和 q 有相同的真值 时，P  q 的真值才为 T，否则 P  q 的直值为 F。
（2）合式公式的表示方法
复合命题：由简单命题通过联结词联结而成的新命题叫复合命题。
合式公式(命题公式,公式)递归定义如下：
① 单个命题常项或变项是合式公式,并称作原子合式公式；
② 若A是合式公式, 则 (A)也是合式公式；
③ 若A, B是合式公式, 则(AB), (AB), (AB), (AB)也是合式公式；
④ 只有有限次地应用(1)~(3)形成的符号串才是合式公式。
给出任意一个合式公式，我们可以将它用C程序表示出来，并且能够计算它在各组真值指派下所应有的真值（或是逻辑运算的结果）。这有多种方法。上面我们已经给出了逻辑连结词的定义，根据这种定义方法，我们也可以把一个合式公式表示成为条件语句中的条件表达式，这样我们就可以得到该合式公式的逻辑运算结果了。
（3）任意合式公式的真值表
真值：一个命题的真或假称为命题的真值。
真值表:命题公式在所有可能的赋值下的取值的列表，含n个变项的公式有2n个赋值。
构造真值表有如下约定：
①  命题变元按字典序排列；
②  对公式的每个解释，以二进制数从小到大或者从大到小顺序列出；
    ③  若公式复杂，可先列出各子公式的真值(若有括号,则应从里层向外层展开)，最后列出所给公式的真值。
5、实验仪器设备或软件环境及工具
运行Windows操作系统的PC机，具有Java语言的编译环境。
6、实验要求
（1）学生在实验操作过程中自己动手独立完成，几人为1组。
（2）利用Java语言或其他计算机语言编出基本逻辑运算程序和实现较复杂的命题公式真值表的程序。
（3）完成实验报告。
6、实验步骤及注意事项
（1）已知命题p和q的真值，求出它们的合取、析取、蕴涵和等价的真值。
（2）合式公式的表示
给出任意一个合式公式，我们可以将它用C程序表示出来，并且能够计算它在各组真值指派下所应有的真值（或是逻辑运算的结果）。
（3）构造任意合式公式的真值表
给出任意变元（不超过四个命题变元）的合式公式，构造该合式公式的真值表。




参考例子：

#include<iostream.h>
void main()
{	int m,s;
	char a,b,c,d,e;
	do{
	cout<<"\n ********欢迎进入该系统********  "<<"\n";
    cout<<" 1.与运算p&&q  "<<"\n";
	cout<<"2.或运算p||q "<<"\n";
	cout<<"3.非运算!q "<<"\n";
	cout<<" 4.则运算p->q  "<<"\n";
	cout<<”5.蕴涵运算p<->q "<<"\n\n";
cout<<"请选择你需要的操作序号:   ";
	cin>>m;
	switch (m)	{
	case 1:{
		cout<<"\n请输入两个字母:";
		cin>>a>>b;
		cout<<a<<"\t"<<b<<"\t"<<a<<"&&"<<b<<"\n";
	    for(int i=0;i<2;i++)
		   for(int k=0;k<2;k++)
		   {	cout<<i<<"\t"<<k<<"\t";
			    if(i+k==2) cout<<"1"<<"\n";
			    else
					cout<<"0"<<"\n";}
		   break;  }
	case 2:{
		cout<<"\n请输入两个字母:";
		cin>>c>>d;
		cout<<c<<"\t"<<d<<"\t"<<c<<"||"<<d<<"\n";
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
			{	cout<<j<<"\t"<<k<<"\t";
				if(j+k>0)
					cout<<1<<"\n";
				else	cout<<0<<"\n";}
			break;	   }
	case 3:{
		cout<<"\n请输入一个字母:";
		cin>>e;
		cout<<e<<"\t"<<"!"<<e<<"\n";
		for(int j=0;j<2;j++)
		{ 	cout<<j<<"\t";
			if(j==0)
				cout<<1<<"\n";
			else
				cout<<0<<"\n";}
		break;	 }
	case 4:{
		cout<<"\n请输入两个字母:";
		cin>>a>>b;
	cout<<a<<"\t"<<b<<"\t"<<a<<"->"<<b<<"\n";
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
			{	cout<<j<<"\t"<<k<<"\t";
				if(j==0)
					cout<<1<<"\n";
				else{
					if(k==1)
					   cout<<1<<"\n";
					else
					   cout<<0<<"\n";}   }
	     break;}
	 case 5:{
		cout<<"\n请输入两个字母:";
		cin>>a>>b;
		cout<<a<<"\t"<<b<<"\t"<<a<<"<->"<<b<<"\n";
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
			{	cout<<j<<"\t"<<k<<"\t";
				if(j==k)
					cout<<1<<"\n";
				else
					cout<<0<<"\n";}
	     break;}
}
	cout<<"\n       你还需要继续操作吗?(YES=1,NO=0):  ";
	cin>>s;
}
	while(s);
}

  1运算：a&&b


  2运算：p->q

  3运算：c<—>d

